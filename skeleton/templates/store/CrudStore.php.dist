<?php

namespace {namespace};

use Simplon\Mysql\Crud\CrudStore;
use Simplon\Mysql\MysqlException;
use Simplon\Mysql\QueryBuilder\CreateQueryBuilder;
use Simplon\Mysql\QueryBuilder\DeleteQueryBuilder;
use Simplon\Mysql\QueryBuilder\ReadQueryBuilder;
use Simplon\Mysql\QueryBuilder\UpdateQueryBuilder;

/**
 * @package {namespace}
 */
class {store}Store extends CrudStore
{
    const TABLE_NAME = '{table}';

    /**
     * @return string
     */
    public function getTableName(): string
    {
        return self::TABLE_NAME;
    }

    /**
     * @return {model}Model
     */
    public function getModel(): {model}Model
    {
        return new {model}Model();
    }

    /**
     * @param CreateQueryBuilder $builder
     *
     * @return {model}Model
     * @throws MysqlException
     */
    public function create(CreateQueryBuilder $builder): {model}Model
    {
        /** @var {model}Model $model */
        $model = $this->crudCreate($builder);

        return $model;
    }

    /**
     * @param ReadQueryBuilder|null $builder
     *
     * @return {model}Model[]|null
     * @throws MysqlException
     */
    public function read(?ReadQueryBuilder $builder = null): ?array
    {
        /** @var {model}Model[] $models */
        $models = $this->crudRead($builder);

        if ($models)
        {
            return $models;
        }

        return null;
    }

    /**
     * @param ReadQueryBuilder $builder
     *
     * @return {model}Model|null
     * @throws MysqlException
     */
    public function readOne(ReadQueryBuilder $builder): ?{model}Model
    {
        /** @var {model}Model $model */
        $model = $this->crudReadOne($builder);

        return $model;
    }

    /**
     * @param UpdateQueryBuilder $builder
     *
     * @return {model}Model
     * @throws MysqlException
     */
    public function update(UpdateQueryBuilder $builder): {model}Model
    {
        /** @var {model}Model $model */
        $model = $this->crudUpdate($builder);

        return $model;
    }

    /**
     * @param DeleteQueryBuilder $builder
     *
     * @return bool
     * @throws MysqlException
     */
    public function delete(DeleteQueryBuilder $builder): bool
    {
        return $this->crudDelete($builder);
    }
}