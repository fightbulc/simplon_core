#!/usr/bin/env php
<?php

$rootPath = '/../..';

if (strpos(__DIR__, '/simplon/core/bin') !== false)
{
    $rootPath = '/../../../..';
}

$rootPath = __DIR__ . $rootPath;

/** @noinspection PhpIncludeInspection */
require $rootPath . '/vendor/autoload.php';

use Silly\Application;
use Simplon\Core\CoreContext;

list($pathComposer, $_) = explode('/simplon/core/src', CoreContext::APP_PATH);
$pathPackage = $pathComposer . '/simplon/core';
$pathSkeleton = $pathPackage . '/skeleton';
$pathApp = $pathComposer . '/..';

require $pathSkeleton . '/utils/TemplateUtil.php';
require $pathSkeleton . '/utils/InitSkeleton.php';
require $pathSkeleton . '/utils/ComponentSkeleton.php';
require $pathSkeleton . '/utils/StoreSkeleton.php';

$app = new Application();

// ##############################################

$app
    ->command('init name [--with-view]', InitSkeleton::process($pathApp, $pathSkeleton))
    ->descriptions('Init your app', [
        'name'        => 'App name',
        '--with-view' => 'Enable view',
    ])
;

// ##############################################

$app
    ->command('component name [--with-rest] [--with-view=]', ComponentSkeleton::process($pathApp, $pathSkeleton))
    ->descriptions('Add a component', [
        'name'        => 'Component name',
        '--with-rest' => 'Enable REST',
        '--with-view' => 'Enable view with first view name',
    ])
;

// ##############################################

$app
    ->command('store component store model [--with-token]', StoreSkeleton::process($pathApp, $pathSkeleton))
    ->descriptions('Add a store/model to an existing component', [
        'component'    => 'Component name',
        'store'        => 'Store name',
        'model'        => 'Model name',
        '--with-token' => 'Enable token',
    ])
;

// ##############################################

$app->run();